model Order {
  id                 Int                  @id @default(autoincrement())
  totalPrice         Float
  orderStatus        OrderStatus
  orderDate          DateTime             @default(now())
  paymentStatus      OrderPaymentStatus
  userId             Int
  orderitem          OrderItem[]
  payment            Payment[]
  orderstatushistory OrderStatusHistory[]
  createdAt          DateTime             @default(now())
  updatedAt          DateTime
  user               User                 @relation(fields: [userId], references: [id])

  @@map("orders")
}

model OrderStatusHistory {
  id         Int                      @id @default(autoincrement())
  status     OrderStatusHistoryStatus
  statusDate DateTime                 @default(now())
  orderId    Int
  createdAt  DateTime                 @default(now())
  updatedAt  DateTime
  order      Order                    @relation(fields: [orderId], references: [id])

  @@map("order_status_histories")
}

model OrderItem {
  id             Int      @id @default(autoincrement())
  productName    String
  quantity       Int
  price          Float
  totalItemPrice Float
  orderId        Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime
  order          Order    @relation(fields: [orderId], references: [id])

  @@map("order_items")
}

enum OrderStatus {
  COMPLETED
  CANCELLED
  PENDING
  IN_PROGRESS
}

enum OrderStatusHistoryStatus {
  COMPLETED
  CANCELLED
  PENDING
  IN_PROGRESS
}

enum OrderPaymentStatus {
  PAID
  PENDING
}
