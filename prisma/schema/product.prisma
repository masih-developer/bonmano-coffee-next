model Product {
  id              Int               @id @default(autoincrement())
  name            String
  price           Float
  quantity        Int
  description     String?
  rating          Float?
  image           String?
  weight          Float?
  height          Float?
  dimensions      String?
  categoryId      Int
  createdAt       DateTime          @default(now())
  updatedAt       DateTime
  cartitem        CartItem[]
  comment         Comment[]
  faq             Faq[]
  ProductAsset    ProductAsset[]
  producttags     ProductTag[]
  ProductCategory ProductCategory[]

  @@index([categoryId], map: "Product_categoryId_idx")
  @@map("products")
}

model ProductTag {
  id        Int     @id @default(autoincrement())
  productId Int
  tagId     Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, map: "ProductTags_productId_fkey")
  tag       Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade, map: "ProductTags_tagId_fkey")

  @@unique([productId, tagId], map: "ProductTags_productId_tagId_key")
  @@index([tagId], map: "ProductTags_tagId_fkey")
  @@map("product_tags")
}

model ProductAsset {
  id        Int        @id @default(autoincrement())
  productId Int
  assetId   Int
  usage     AssetUsage
  createdAt DateTime   @default(now())
  asset     Asset      @relation(fields: [assetId], references: [id], onDelete: Cascade)
  product   Product    @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([productId, usage])
  @@index([assetId], map: "product_assets_assetId_fkey")
  @@map("product_assets")
}

model ProductCategory {
  id         Int      @id @default(autoincrement())
  productId  Int
  categoryId Int
  product    Product  @relation(fields: [productId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@map("product_categories")
}

enum AssetUsage {
  MAIN
  GALLERY
  THUMBNAIL
}
